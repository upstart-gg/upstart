name: Run tests & publish snapshot

on:
  workflow_call:
  push:
    branches: [main]
    # do not trigger CI on tags, it will be handled by the "release" event
    tags-ignore:
      - "*"
    paths:
      - "!.changeset/**"
      - "!.vscode/**"
      - "!docs/**"
      - "**/*.html"
      - "**/*.js"
      - "**/*.ts"
      - "**/*.jsx"
      - "**/*.tsx"
      - "**/*.mjs"
      - "**/*.mts"
      - "**/*.yml"
      - "**/*.yaml"
      - "**/*.json"
  pull_request:
    branches: [main]
    paths:
      - "!.changeset/**"
      - "!.vscode/**"
      - "!docs/**"
      - "**/*.html"
      - "**/*.js"
      - "**/*.ts"
      - "**/*.jsx"
      - "**/*.tsx"
      - "**/*.mjs"
      - "**/*.mts"
      - "**/*.yml"
      - "**/*.yaml"
      - "**/*.json"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  pull-requests: write

env:
  FLIPPABLE_ENV: test
  TURBO_SCM_BASE: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || github.event.before }}

jobs:
  test:
    if: ${{ !contains(github.event.head_commit.message, 'chore(release):') }}
    name: Test job
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".tool-versions"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: build
        run: pnpm build
        env:
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
          TURBO_TEAM: ${{ vars.TURBO_TEAM}}

      - name: lint
        run: pnpm ci:lint

      - name: test
        run: pnpm test

      - name: publish snapshot
        if: ${{ github.event_name == 'pull_request' }}
        run: pnpx pkg-pr-new publish './packages/components' './packages/sdk' './packages/style-system' --no-template --compact --pnpm
